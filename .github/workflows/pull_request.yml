name: Pull Request validation and Snapshot build

on:
  pull_request

jobs:
  build:
    name: Pull Request Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Validate
        run: mvn -B verify

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          # fail-if-coverage-less-than: 75
          # fail-if-branches-less-than: 50
          generate-summary: true

      - name: PR body build
        id: pr_body_build
        run: |
          REPORT=$(<.github/badges/coverage-summary.json)
          COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
          BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
          NEWLINE=$'\n'
          BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
          echo ${BODY}
          if [[ ${COVERAGE} -ge 75 && ${BRANCHES} -ge 50 ]]; then
            RESULT = ":white_check_mark:"
          else
            RESULT = ":x:"
          fi
          echo "COMMENT_BODY=## JaCoCo Test Coverage Summary Statistics ${RESULT}" >> $GITHUB_OUTPUT
          echo "COVERAGE_BODY=* __Coverage:__ ${COVERAGE}" >> $GITHUB_OUTPUT
          echo "BRANCHES_BODY=* __Branches:__ ${BRANCHES}" >> $GITHUB_OUTPUT
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ${{ steps.pr_body_build.outputs.COMMENT_BODY }}
            ${{ steps.pr_body_build.outputs.COVERAGE_BODY }}
            ${{ steps.pr_body_build.outputs.BRANCHES_BODY }}

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branches = ${{ steps.jacoco.outputs.branches }}"
